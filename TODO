MUST HAVE

NICE TO HAVE
* Checkpointing and restoring populations
* Hooks for visualizers
* Overselecting strategy should have more flexible defaults
* Bias node selection in crossover by terminal/nonterminal status (i.e. node selection is 90% likely to choose an internal node)
* Elite reproduction
* Tournament selection
* Rank selection
* Mutation
* De-serialize programs from S-expressions
* Optimize programs
* Adapters for Hadoop/EMR
* Pretty-print program S-expressions

CODE QUALITY
* Change all those (Program, Fitness) tuples that litter the code into proper objects
* Attempts to breed an odd number of programs by crossover should be handled gracefully
* Do the tests rely too heavily on spying?
